---
title: ""
author: ""
date: ""
output:
  html_document:
    theme: flatly
    toc: yes
    toc_float:
      collapsed: no
      smooth_scroll: no
    code_folding: hide
    css: style.css
---


```{r setup, include=FALSE}

library(flexdashboard)
library(readxl)
library(tidyverse)
library(crosstalk)
library(plotly)
library(viridis)
library(gsheet)
theme_set(theme_bw())

```

```{r load data, message=FALSE, warning=FALSE, include=FALSE}
Sys.setlocale("LC_ALL", 'pt_BR.UTF-8')
# carrega os dados com lat e long
s1 <- read_excel("fgsc-dat4.xlsx", 1)
s2 <- read_excel("fgsc-dat4.xlsx", 2)
s3 <- read_excel("fgsc-dat4.xlsx", 3)
s4 <- read_excel("fgsc-dat4.xlsx", 4)
s5 <- read_excel("fgsc-dat4.xlsx", 5)
s6 <- read_excel("fgsc-dat4.xlsx", 6)
s7 <- read_excel("fgsc-dat4.xlsx", 7)
s8 <- read_excel("fgsc-dat4.xlsx", 8)
s9 <- read_excel("fgsc-dat4.xlsx", 9)
s10 <- read_excel("fgsc-dat4.xlsx", 10)
s11 <- read_excel("fgsc-dat4.xlsx", 11)
s12 <- read_excel("fgsc-dat4.xlsx", 12)
s13 <- read_excel("fgsc-dat4.xlsx", 13)
s14 <- read_excel("fgsc-dat4.xlsx", 14)
s15 <- read_excel("fgsc-dat4.xlsx", 15)
s16 <- read_excel("fgsc-dat4.xlsx", 16)
s19 <- read_excel("fgsc-dat4.xlsx", 19)
s20 <- read_excel("fgsc-dat4.xlsx", 20)
s21 <- read_excel("fgsc-dat4.xlsx", 21)
s22 <- read_excel("fgsc-dat4.xlsx", 22)
s23 <- read_excel("fgsc-dat4.xlsx", 23)
s24 <- read_excel("fgsc-dat4.xlsx", 24)
s25 <- read_excel("fgsc-dat4.xlsx", 25)
s26 <- read_excel("fgsc-dat4.xlsx", 26)
s27 <- read_excel("fgsc-dat4.xlsx", 27)
s28 <- read_excel("fgsc-dat4.xlsx", 28)
s29 <- read_excel("fgsc-dat4.xlsx", 29)
s30 <- read_excel("fgsc-dat4.xlsx", 30)
s31 <- read_excel("fgsc-dat4.xlsx", 31)
s32 <- read_excel("fgsc-dat4.xlsx", 32)
s33 <- read_excel("fgsc-dat4.xlsx", 33)
s34 <- read_excel("fgsc-dat4.xlsx", 34)
s35 <- read_excel("fgsc-dat4.xlsx", 35)
s36 <- read_excel("fgsc-dat4.xlsx", 36)
s37 <- read_excel("fgsc-dat4.xlsx", 37)
s38 <- read_excel("fgsc-dat4.xlsx", 38)
s39 <- read_excel("fgsc-dat4.xlsx", 39)
fgsc2 <- rbind(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s19, s20, s21, s22, s23, s24, s25, s26, s27, s28, s29, s30, s31, s32, s33, s34, s35, s36, s37, s38, s39)
fgsc2$Latitude <- round(jitter(fgsc2$Latitude, factor = 6),4)
fgsc2$Longitude <- round(jitter(fgsc2$Longitude, factor = 6),4)
fgsc <- fgsc2 %>% select(c(13,2,6,7, 8,9, 10, 14, 19, 20, 21))
library(plyr)
table(fgsc$FGSC)
fgsc$FGSC2 <- revalue(fgsc$FGSC,  c("F. graminearum" = "Fgra", "F. meridionale" = "Fmer", "F. cortaderiae" = "Fcor", "F. austroamericanum" = "Faus","F. asiaticum" = "Fasi", "F. louisianense" = "Flou", "F. boothii" = "Fboo", "F. gerlachii" = "Fger", "F. ussurianum" = "Fuss","F. vorosii" = "Fvor", "F. acaciae-mearnsii" = "Faca", "F. boothii X F. graminearum" = "Fboo x Fgra", "F. brasilicum" = "Fbra","F. aethiopicum" = "Faet"))
fgsc$Year <- as.numeric(fgsc$Year)
fgsc <- fgsc %>%  filter(FGSC != 30) %>%  filter(FGSC != "F. cerealis") %>% filter(FGSC != "F. culmorum") 
fgsc$Host <- revalue(fgsc$Host, 
                     c("oat" = "Oat",  "corn" = "Maize","wheat" = "Wheat", "barley" = "Barley"))
fgsc$Tri_genotype <- revalue(fgsc$Tri_genotype, c("NX2" = "NX-2"))


```


```{r include=FALSE}
# load the article database
library(gsheet)
articles <-
 gsheet2tbl('https://docs.google.com/spreadsheets/d/1rAC_U5upuDPHCSLi9kieb4R5tztHVJGW84aQOf6z7Lk/edit?usp=sharing') 
articles <- articles %>% 
  filter (pub_order == 1)

```

## Scientometrics 

Species/trichothecene genotype identification and associated metadata were obtained from `r nrow(articles)` peer-reviewed articles published from `r min(articles$year)` to `r max(articles$year)`. Let's look at the trend in the number of articles over the years.

### Articles per year

```{r message=FALSE, warning=FALSE, paged.print=TRUE}
articles %>% 
  
  ggplot(aes(year))+
  geom_bar()+
  scale_y_continuous(breaks=seq(0, 11, 1), expand=c(0.02, 0))+
  scale_x_continuous(breaks=seq(2000, 2017))+
  labs(y = "Number of articles", x = "Published year", title = "Articles per year")
  
```


### Journals

```{r message=FALSE, warning=FALSE, paged.print=TRUE}
articles %>% 
  ggplot(aes(reorder(journal_name, journal_name, function(x) length(x))))+
  geom_bar()+
  scale_y_continuous(breaks=seq(0,10), expand=c(0.01, 0))+
  coord_flip()+
  labs(y = "Number of articles", x = "Journals", title = "Articles per journal")
  
```


## Authorship 

### Country of origin

```{r message=FALSE, warning=FALSE, paged.print=TRUE}

articles %>% 
  gather(code, country, 25:30) %>% 
  filter(country != "NA") %>% 
  ggplot(aes(reorder(country, country, function(x) length(x))))+
  geom_bar()+
  scale_y_continuous(breaks=seq(0,30,2), expand=c(0.01, 0))+
  coord_flip()+
  labs(y = "Number of articles", x = "Published year", title = "Articles per country" )
 
 
```


```{r include=FALSE}

country <- articles %>% 
  gather(code, country, 25:30) %>% 
  filter(country != "NA") %>% 
  select(country) %>% 
  group_by(country) %>% 
  tally(sort = T) 

```


### Number of articles


```{r message=FALSE, warning=FALSE, paged.print=TRUE}

authors <- articles %>% 
  gather(author, name, 6:19) %>% 
  filter(name != "NA") %>% 
 group_by(name) %>% 
  tally(sort = T) 

authors %>% 
  filter(n > 2) %>% 
  ggplot(aes(reorder(name, n), n))+
  geom_col(stat = "identity")+
  scale_y_continuous(breaks=seq(0,30,3),  expand=c(0.01, 0))+
  coord_flip()+
    labs(x = "Author", y = "Frequency", title ="Articles per author")
  
 
 
```

### Wordcloud 



```{r message=FALSE, warning=FALSE, paged.print=FALSE}
library(wordcloud)
#png("FGSC-authors.png", width=12, height=12, units="in", res=300)
wordcloud(authors$name, authors$n, c(4,.5), 1, random.order = F, colors=brewer.pal(8, "Dark2"))
#dev.off()

```


### Network analysis


#### Edge list

```{r message=FALSE, warning=FALSE, include=FALSE, paged.print=FALSE}
library(purrr)
library(purrrlyr)

authors_net <- articles %>% select (6:19)
author_list <- flatten(by_row(authors_net, ..f = function(x) flatten_chr(x), .labels = FALSE))
author_list <- lapply(author_list, function(x) x[!is.na(x)])

# create the edge list
author_edge_list <- t(do.call(cbind, lapply(author_list[sapply(author_list, length) >= 2], combn, 2)))

```

#### Statnet network


```{r message=FALSE, warning=FALSE, include=FALSE, paged.print=FALSE}
# igraph
library(igraph)
net=graph.edgelist(as.matrix(author_edge_list),directed=FALSE)
degree <- data.frame(degree(net))
summary(degree$degree.net.)
between <- data.frame(round(betweenness(net), 1))
page <- data.frame(page_rank(net)$vector)
close <-data.frame(round(closeness(net), 10))
evcent(net)$vector
eigen <- data.frame(round(evcent(net)$vector, 5))

```


```{r message=FALSE, warning=FALSE, paged.print=FALSE}
library(network)
library(intergraph)
net_stat <- asNetwork(net)
#png("network_statnet2.png", res = 600,  width = 4000 , height = 4000, units="px")
par(mar=c(0, 0,0, 0))
set.seed(1002)
plot.network(net_stat, vertex.cex= 0.05 + 0.25*log(graph.strength(net)), label =ifelse(degree(net)>24,V(net)$name,NA), label.bg = "white", label.col = "black", edge.col = "lightgray", edge.lty = 0.5, label.cex = 0.6,  displaylabels = TRUE, vertex.col = "gray", jitter = T, edge.len = 0.2, boxed.labels=T, label.border="NA", pad=0.8)
#dev.off()
```


### Interactive network

```{r message=FALSE, warning=FALSE, include=FALSE, paged.print=FALSE}
get.edgelist(net)
edge_df <- as.data.frame(get.edgelist(net))
colnames(edge_df) <- c("from", "to")
```

```{r message=FALSE, warning=FALSE, paged.print=FALSE}
library(networkD3)
netD3 <- simpleNetwork(edge_df, zoom = T,
              fontFamily = "Arial",
              fontSize = 13,
              charge = -200,
              linkColour = "lightgrey",
              linkDistance = 80,
              nodeColour = "black",
              opacity = 0.9,
              width=900
              
             )
netD3
 saveNetwork(netD3, file = 'network-FGSC.html')
```


