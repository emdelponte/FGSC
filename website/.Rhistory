geom_bar()+
scale_y_continuous(breaks=seq(0,30,2), expand=c(0.01, 0))+
coord_flip()+
labs(y = "Number of articles", x = "", title = "Articles per country" )
articles %>%
gather(code, country, 25:30) %>%
filter(country != "NA") %>%
ggplot(aes(reorder(country, country, function(x) length(x))))+
geom_bar(aes(fill = factor(pub_order)))+
scale_y_continuous(breaks=seq(0,30,2), expand=c(0.01, 0))+
coord_flip()+
labs(y = "Number of articles", x = "", title = "Articles per country" )
authors <- articles %>%
gather(author, name, 6:19) %>%
select(author, name) %>%
filter(name != "NA") %>%
group_by(name) %>%
tally(sort = T)
head(authors, 20)
authors %>%
filter(n > 2) %>%
ggplot(aes(reorder(name, n), n))+
geom_col()+
scale_y_continuous(breaks=seq(0,30,3),  expand=c(0.01, 0))+
coord_flip()+
labs(x = "", y = "Frequency", title ="Articles per author")
authors %>%
filter(n > 1) %>%
ggplot(aes(reorder(name, n), n))+
geom_col()+
scale_y_continuous(breaks=seq(0,30,3),  expand=c(0.01, 0))+
coord_flip()+
labs(x = "", y = "Frequency", title ="Articles per author")
authors %>%
filter(n > 2) %>%
ggplot(aes(reorder(name, n), n))+
geom_col()+
scale_y_continuous(breaks=seq(0,30,3),  expand=c(0.01, 0))+
coord_flip()+
labs(x = "", y = "Frequency", title ="Articles per author")
library(wordcloud)
#png("FGSC-authors.png", width=12, height=12, units="in", res=300)
wordcloud(authors$name, authors$n, c(4,.5), 1, random.order = F, colors=brewer.pal(8, "Dark2"))
#dev.off()
head(authors, 20)
authors %>%
filter(n > 2) %>%
ggplot(aes(reorder(name, n), n))+
geom_col()+
scale_y_continuous(breaks=seq(0,30,3),  expand=c(0.01, 0))+
coord_flip()+
labs(x = "", y = "Frequency", title ="Articles per author")
library(wordcloud)
#png("FGSC-authors.png", width=12, height=12, units="in", res=300)
wordcloud(authors$name, authors$n, c(4,.5), 1, random.order = F, colors=brewer.pal(8, "Dark2"))
#dev.off()
library(purrr)
library(purrrlyr)
authors_net <- articles %>% select (6:19)
author_list <- flatten(by_row(authors_net, ..f = function(x) flatten_chr(x), .labels = FALSE))
author_list <- lapply(author_list, function(x) x[!is.na(x)])
# create the edge list
author_edge_list <- t(do.call(cbind, lapply(author_list[sapply(author_list, length) >= 2], combn, 2)))
author_edge_list[1:10, ]
authors <- articles %>%
gather(author, name, 6:19) %>%
select(author, name) %>%
filter(name != "NA") %>%
group_by(name) %>%
tally(sort = T)
library(here)
library(readxl)
library(tidyverse)
library(crosstalk)
library(plotly)
library(viridis)
library(gsheet)
theme_set(theme_grey())
Sys.setlocale("LC_ALL", 'pt_BR.UTF-8')
# load the article database
#library(gsheet)
#articles <-
# gsheet2tbl('https://docs.google.com/spreadsheets/d/1rAC_U5upuDPHCSLi9kieb4R5tztHVJGW84aQOf6z7Lk/edit?usp=sharing')
#articles <- articles
articles <- read_csv(here("data", "articles-reviewed.csv"))
year <- articles %>%
select(year) %>%
group_by(year) %>%
tally(sort = T)
articles %>%
ggplot(aes(year))+
geom_bar(aes(fill = factor(pub_order)))+
scale_y_continuous(breaks=seq(0, 11, 1), expand=c(0.02, 0))+
scale_x_continuous(breaks=seq(2000, 2017))+
labs(y = "Number of articles", x = "Published year", title = "Articles per year")
journal <- articles %>%
select(journal_name) %>%
group_by(journal_name) %>%
tally(sort = T)
articles %>%
ggplot(aes(reorder(journal_name, journal_name, function(x) length(x))))+
geom_bar(aes(fill = factor(pub_order)))+
scale_y_continuous(breaks=seq(0,10), expand=c(0.01, 0))+
coord_flip()+
labs(y = "Number of articles", x = "", title = "Articles per journal")
countries <- articles %>%
gather(code, country, 25:30) %>%
filter(country != "NA") %>%
select(country) %>%
group_by(country) %>%
tally(sort = T)
articles %>%
gather(code, country, 25:30) %>%
filter(country != "NA") %>%
ggplot(aes(reorder(country, country, function(x) length(x))))+
geom_bar(aes(fill = factor(pub_order)))+
scale_y_continuous(breaks=seq(0,30,2), expand=c(0.01, 0))+
coord_flip()+
labs(y = "Number of articles", x = "", title = "Articles per country" )
authors <- articles %>%
gather(author, name, 6:19) %>%
select(author, name) %>%
filter(name != "NA") %>%
group_by(name) %>%
tally(sort = T)
head(authors, 20)
authors %>%
filter(n > 2) %>%
ggplot(aes(reorder(name, n), n))+
geom_col()+
scale_y_continuous(breaks=seq(0,30,3),  expand=c(0.01, 0))+
coord_flip()+
labs(x = "", y = "Frequency", title ="Articles per author")
library(wordcloud)
#png("FGSC-authors.png", width=12, height=12, units="in", res=300)
wordcloud(authors$name, authors$n, c(4,.5), 1, random.order = F, colors=brewer.pal(8, "Dark2"))
library(purrr)
library(purrrlyr)
authors_net <- articles %>% select (6:19)
author_list <- flatten(by_row(authors_net, ..f = function(x) flatten_chr(x), .labels = FALSE))
author_list <- lapply(author_list, function(x) x[!is.na(x)])
# create the edge list
author_edge_list <- t(do.call(cbind, lapply(author_list[sapply(author_list, length) >= 2], combn, 2)))
author_edge_list[1:10, ]
library(here)
library(readxl)
library(tidyverse)
library(crosstalk)
library(plotly)
library(viridis)
library(gsheet)
theme_set(theme_grey())
Sys.setlocale("LC_ALL", "pt_BR.UTF-8")
mca1
library(here)
library(readxl)
library(tidyverse)
library(crosstalk)
library(plotly)
library(viridis)
library(gsheet)
theme_set(theme_grey())
Sys.setlocale("LC_ALL", "pt_BR.UTF-8")
# load the article database
# library(gsheet)
# articles <-
# gsheet2tbl('https://docs.google.com/spreadsheets/d/1rAC_U5upuDPHCSLi9kieb4R5tztHVJGW84aQOf6z7Lk/edit?usp=sharing')
# articles <- articles
articles <- read_excel(here("data", "articles-reviewed.xlsx"))
year <- articles %>%
select(year) %>%
group_by(year) %>%
tally(sort = T)
articles %>%
ggplot(aes(year)) +
geom_bar(aes(fill = factor(pub_order))) +
scale_y_continuous(breaks = seq(0, 11, 1), expand = c(0.02, 0)) +
scale_x_continuous(breaks = seq(2000, 2017)) +
labs(y = "Number of articles", x = "Published year", title = "Articles per year")
journal <- articles %>%
select(journal_name) %>%
group_by(journal_name) %>%
tally(sort = T)
journal
articles %>%
ggplot(aes(reorder(journal_name, journal_name, function(x) length(x)))) +
geom_bar(aes(fill = factor(pub_order))) +
scale_y_continuous(breaks = seq(0, 10), expand = c(0.01, 0)) +
coord_flip() +
labs(y = "Number of articles", x = "", title = "Articles per journal")
countries <- articles %>%
gather(code, country, 25:30) %>%
filter(country != "NA") %>%
select(country) %>%
group_by(country) %>%
tally(sort = T)
articles %>%
gather(code, country, 25:30) %>%
filter(country != "NA") %>%
ggplot(aes(reorder(country, country, function(x) length(x)))) +
geom_bar(aes(fill = factor(pub_order))) +
scale_y_continuous(breaks = seq(0, 30, 2), expand = c(0.01, 0)) +
coord_flip() +
labs(y = "Number of articles", x = "", title = "Articles per country")
authors <- articles %>%
gather(author, name, 6:19) %>%
select(author, name) %>%
filter(name != "NA") %>%
group_by(name) %>%
tally(sort = T)
head(authors, 20)
authors %>%
filter(n > 2) %>%
ggplot(aes(reorder(name, n), n)) +
geom_col() +
scale_y_continuous(breaks = seq(0, 30, 3), expand = c(0.01, 0)) +
coord_flip() +
labs(x = "", y = "Frequency", title = "Articles per author")
library(purrr)
library(purrrlyr)
authors_net <- articles %>% select(6:19)
author_list <- flatten(by_row(authors_net, ..f = function(x) flatten_chr(x), .labels = FALSE))
author_list <- lapply(author_list, function(x) x[!is.na(x)])
# create the edge list
author_edge_list <- t(do.call(cbind, lapply(author_list[sapply(author_list, length) >= 2], combn, 2)))
author_edge_list[1:10, ]
# igraph
library(igraph)
net <- graph.edgelist(as.matrix(author_edge_list), directed = FALSE)
degree <- data.frame(degree(net))
# summary(degree$degree.net.)
between <- data.frame(round(betweenness(net), 1))
page <- data.frame(page_rank(net)$vector)
close <- data.frame(round(closeness(net), 10))
eigen <- data.frame(round(evcent(net)$vector, 5))
library(network)
library(intergraph)
# Clusters
wc <- cluster_walktrap(net)
# Modularity
mod <- modularity(wc)
ms <- membership(wc)
net_stat <- asNetwork(net)
png("network1.png", res = 600, width = 4000, height = 4000, units = "px")
set.seed(1003)
par(mar = c(0, 0, 0, 0))
plot.network(net_stat, vertex.cex = 0.05 + 0.25 * log(graph.strength(net)), label = ifelse(degree(net) > 24, V(net)$name, NA), label.bg = "NA", label.col = "black", edge.col = "lightgray", edge.lty = 0.5, label.cex = 0.7, displaylabels = TRUE, vertex.col = membership(wc), jitter = T, edge.len = 0.2, boxed.labels = T, label.border = "NA", pad = 1.2)
dev.off()
get.edgelist(net)
edge_df <- as.data.frame(get.edgelist(net))
colnames(edge_df) <- c("from", "to")
library(broom)
# Transitivity
trans <- transitivity(net, type = "global")
# Degree
deg <- degree(net)
deg <- tidy(deg)
deg2 <- deg %>%
group_by(names) %>%
arrange(desc(x)) %>%
head(20)
# Betweenness
bet <- betweenness(net, normalized = TRUE, directed = FALSE)
bet <- tidy(bet)
bet2 <- bet %>%
group_by(names) %>%
arrange(desc(x)) %>%
head(20)
# Eigenvector centrality
eigen <- eigen_centrality(net)
eigen1 <- tidy(eigen$vector)
eigen2 <- eigen1 %>%
group_by(names) %>%
arrange(desc(x)) %>%
head(20)
# Page rank centrality
rank <- page.rank(net)
rank1 <- tidy(rank$vector)
rank2 <- rank1 %>%
group_by(names) %>%
arrange(desc(x)) %>%
head(20)
# Closeness centrality
close <- closeness(net)
close1 <- tidy(close)
close2 <- close1 %>%
group_by(names) %>%
arrange(desc(x)) %>%
head(20)
# Clusters
wc <- cluster_walktrap(net)
# Modularity
mod <- modularity(wc)
ms <- membership(wc)
# clustering edge betweenness
eb <- cluster_edge_betweenness(net)
deg2
bet2
rank2
eigen2
close2
n_strains_no <- articles %>%
filter(pub_order == "no") %>%
select(n_isolates) %>%
sum()
n_strains_yes <- articles %>%
filter(pub_order == "yes") %>%
select(n_isolates) %>%
sum()
prop_indexed <- n_strains_yes / (n_strains_yes + n_strains_no) * 100
articles %>%
ggplot(aes(n_isolates)) +
geom_histogram(color = "white") +
facet_wrap(~pub_order)
articles %>%
ggplot(aes(pub_order, n_isolates)) +
geom_boxplot()
fgsc <- read_csv(here("data", "data-fgsc.csv"))
fgsc %>%
select(FGSC) %>%
group_by(FGSC) %>%
tally(sort = T)
fgsc %>%
select(Host) %>%
group_by(Host) %>%
tally(sort = T)
fgsc %>%
select(Tri_genotype) %>%
group_by(Tri_genotype) %>%
tally(sort = T)
fgsc %>%
select(Country) %>%
group_by(Country) %>%
tally(sort = T)
fgsc2 <- fgsc %>%
filter(Tri_genotype == "15-ADON" |
Tri_genotype == "3-ADON" |
Tri_genotype == "NIV") %>%
select(Host, Tri_genotype, FGSC2 ) %>%
filter(FGSC2 == "Fgra" |
FGSC2 == "Fmer" |
FGSC2 == "Fasi" |
FGSC2 == "Fcor" |
FGSC2 == "Fboo" |
FGSC2 == "Faus") %>%
filter(Host == "Wheat" |
Host == "Rice" |
Host == "Barley"|
Host == "Maize"
)
library(FactoMineR)
attach(fgsc2)
data_mca = data.frame(Host, Tri_genotype, FGSC2)
head(data_mca)
cats<- apply(data_mca, 2, function(x) nlevels(as.factor(x))) #enumera as categorias
cats
mca1 <- MCA(data_mca, graph = TRUE)
mca1
res.mca = MCA(data_mca, graph=FALSE)
library("factoextra")
eig.val <- get_eigenvalue(res.mca)
# head(eig.val)
fviz_screeplot(res.mca, addlabels = TRUE, ylim = c(0, 45))
fviz_mca_biplot(res.mca,
repel = F, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
ggplot(data = mca1_obs_df, aes(x = Dim.1, y = Dim.2)) +
theme_bw() +
geom_hline(yintercept = 0, colour = "gray70") +
geom_vline(xintercept = 0, colour = "gray70") +
geom_point(colour = "gray90", alpha = 0.7) +
geom_density2d(colour = "gray90") +
theme(legend.position="none") +
geom_text(data = mca1_vars_df, cex=4,
position = position_jitter(h =0.05, w = 0.05),
aes(x = Dim.1, y = Dim.2,
label = rownames(mca1_vars_df), colour = Variable)) +
ggtitle("") +
scale_colour_discrete(name = "Variable")+
ylim(-5,8)+
xlim(-2.55,5)
ggplot(data = mca1_obs_df, aes(x = Dim.1, y = Dim.2)) +
theme_bw() +
geom_hline(yintercept = 0, colour = "gray70") +
geom_vline(xintercept = 0, colour = "gray70") +
geom_point(colour = "gray90", alpha = 0.7) +
geom_density2d(colour = "gray90") +
theme(legend.position="none") +
geom_text(data = mca1_vars_df, cex=4,
position = position_jitter(h =0.05, w = 0.05),
aes(x = Dim.1, y = Dim.2,
label = rownames(mca1_vars_df), colour = Variable)) +
ggtitle("") +
scale_colour_discrete(name = "Variable")+
ylim(-5,8)+
xlim(-2.55,5)
fgsc2 <- fgsc %>%
filter(Tri_genotype == "15-ADON" |
Tri_genotype == "3-ADON" |
Tri_genotype == "NIV") %>%
select(Host, Tri_genotype, FGSC2 ) %>%
filter(FGSC2 == "Fgra" |
FGSC2 == "Fmer" |
FGSC2 == "Fasi" |
FGSC2 == "Fcor" |
FGSC2 == "Fboo" |
FGSC2 == "Faus") %>%
filter(Host == "Wheat" |
Host == "Rice" |
Host == "Barley"|
Host == "Maize"
)
fgsc2
res.mca = MCA(data_mca, graph=FALSE)
eig.val <- get_eigenvalue(res.mca)
# head(eig.val)
fviz_screeplot(res.mca, addlabels = TRUE, ylim = c(0, 45))
ggplot(data = mca1_obs_df, aes(x = Dim.1, y = Dim.2)) +
theme_bw() +
geom_hline(yintercept = 0, colour = "gray70") +
geom_vline(xintercept = 0, colour = "gray70") +
geom_point(colour = "gray90", alpha = 0.7) +
geom_density2d(colour = "gray90") +
theme(legend.position="none") +
geom_text(data = mca1_vars_df, cex=4,
position = position_jitter(h =0.05, w = 0.05),
aes(x = Dim.1, y = Dim.2,
label = rownames(mca1_vars_df), colour = Variable)) +
ggtitle("") +
scale_colour_discrete(name = "Variable")+
ylim(-5,8)+
xlim(-2.55,5)
fviz_mca_biplot(res.mca,
repel = F, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
plot(mca1)
res.mca = MCA(data_mca, graph=FALSE)
res.mca
eig.val
head(eig.val)
fviz_screeplot(res.mca, addlabels = TRUE, ylim = c(0, 45))
?fviz_screeplot
>fviz_mca_biplot
?fviz_mca_biplot
fviz_mca_biplot(res.mca,  addEllipses = T, label = "none",
repel = F, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
fviz_mca_biplot(res.mca,  addEllipses = T, label = "ind",
repel = F, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
fviz_mca_biplot(res.mca,  addEllipses = T, label = "none", arrows = T,
repel = F, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
fviz_mca_biplot(res.mca,  addEllipses = T, label = "none", arrows = TRUe,               repel = F, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
fviz_mca_biplot(res.mca,  addEllipses = T, label = "none", arrows = TRUE, repel = F, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
fviz_mca_biplot(res.mca,  addEllipses = T, label = "none", arrow = TRUE, repel = F, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
fviz_mca_biplot(res.mca,  label = "none",  repel = F, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
fviz_mca_biplot(res.mca,   repel = F, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
fviz_mca_biplot(res.mca,  invisible ="ind", repel = F, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
fviz_mca_biplot(res.mca,  label = "var", repel = F, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
fviz_mca_biplot(res.mca, col.ind="cos2", label = "var", repel = F, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
fviz_mca_biplot(res.mca, col.ind="cos2", label = "var", repel = F,
col.var ="blue",
habillage=grp, addEllipses=TRUE, ellipse.level=0.95,
# Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
fviz_mca_biplot(res.mca, col.ind="cos2", label = "var", repel = F,
col.var ="blue",
habillage=var, addEllipses=TRUE, ellipse.level=0.95,
# Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
fviz_mca_biplot(res.mca, col.ind="cos2", label = "var", repel = F,
col.var ="blue", addEllipses=TRUE, ellipse.level=0.95,
# Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
fviz_mca_biplot(res.mca, col.ind="cos2", label = "var", repel = F,
col.var ="blue",
# Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
fviz_mca_biplot(res.mca,  label = "var", repel = F,
col.var ="blue",
# Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
fviz_mca_biplot(res.mca,  label = "var", repel = F,
# Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
p <- fviz_mca_biplot(res.mca,  label = "var", repel = F,
# Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
p + scale_color_viridis()
p + scale_fill_viridis()
p <- fviz_mca_biplot(res.mca,  label = "var", repel = F,
col.var = "contrib",
# Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
p + scale_color_viridis()
p <- fviz_mca_biplot(res.mca,  label = "var", repel = F,
col.var = "contrib",
# Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
p + scale_color_viridis()
fviz_screeplot(res.mca, addlabels = TRUE, ylim = c(0, 45))
p + scale_color_viridis()
setwd("~/Documents/FGSC/website")
